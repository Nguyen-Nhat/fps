// Code generated by rpc-framework. DO NOT EDIT.
package config

import (
	"bytes"
	"encoding/json"
	"strings"

	"git.teko.vn/loyalty-system/loyalty-worker/rpcimpl/server"
	"github.com/spf13/viper"
	"go.tekoapis.com/kitchen/log"
)

// Config ...
type Base struct {
	Log    log.Config    `json:"log" mapstructure: "log"`
	Server server.Config `json:"server" mapstructure: "server"`
}

func defaultBaseConfig() *Base {
	return &Base{
		Log:    log.DefaultConfig(),
		Server: server.DefaultConfig(),
	}
}

// Load system env config
func Load() (*Config, error) {

	// You should set default config value here
	c := loadDefaultConfig()

	// --- hacking to load reflect structure config into env ----//
	viper.SetConfigType("json")
	configBuffer, err := json.Marshal(c)

	if err != nil {
		return nil, err
	}

	viper.ReadConfig(bytes.NewBuffer(configBuffer))
	viper.SetEnvKeyReplacer(strings.NewReplacer(".", "__"))

	// -- end of hacking --//
	viper.AutomaticEnv()
	err = viper.Unmarshal(c)
	return c, err
}
