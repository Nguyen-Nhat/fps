// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FileAwardPointColumns holds the columns for the "file_award_point" table.
	FileAwardPointColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "merchant_id", Type: field.TypeInt64},
		{Name: "display_name", Type: field.TypeString},
		{Name: "file_url", Type: field.TypeString, Size: 500},
		{Name: "result_file_url", Type: field.TypeString, Size: 510},
		{Name: "note", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeInt16, Default: 0},
		{Name: "stats_total_row", Type: field.TypeInt32, Default: 0},
		{Name: "stats_total_success", Type: field.TypeInt32, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "updated_by", Type: field.TypeString},
	}
	// FileAwardPointTable holds the schema information for the "file_award_point" table.
	FileAwardPointTable = &schema.Table{
		Name:       "file_award_point",
		Columns:    FileAwardPointColumns,
		PrimaryKey: []*schema.Column{FileAwardPointColumns[0]},
	}
	// MemberTransactionColumns holds the columns for the "member_transaction" table.
	MemberTransactionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "file_award_point_id", Type: field.TypeInt32},
		{Name: "point", Type: field.TypeInt64},
		{Name: "phone", Type: field.TypeString, Size: 15},
		{Name: "order_code", Type: field.TypeString, Size: 50},
		{Name: "ref_id", Type: field.TypeString, Size: 50},
		{Name: "sent_time", Type: field.TypeTime},
		{Name: "loyalty_txn_id", Type: field.TypeInt64, Default: 0},
		{Name: "txn_desc", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeInt16, Default: 0},
		{Name: "error", Type: field.TypeString, Size: 255},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// MemberTransactionTable holds the schema information for the "member_transaction" table.
	MemberTransactionTable = &schema.Table{
		Name:       "member_transaction",
		Columns:    MemberTransactionColumns,
		PrimaryKey: []*schema.Column{MemberTransactionColumns[0]},
	}
	// ProcessingFileColumns holds the columns for the "processing_file" table.
	ProcessingFileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "client_id", Type: field.TypeInt32},
		{Name: "display_name", Type: field.TypeString},
		{Name: "file_url", Type: field.TypeString},
		{Name: "result_file_url", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt16},
		{Name: "total_mapping", Type: field.TypeInt32},
		{Name: "stats_total_row", Type: field.TypeInt32},
		{Name: "stats_total_success", Type: field.TypeInt32},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProcessingFileTable holds the schema information for the "processing_file" table.
	ProcessingFileTable = &schema.Table{
		Name:       "processing_file",
		Columns:    ProcessingFileColumns,
		PrimaryKey: []*schema.Column{ProcessingFileColumns[0]},
	}
	// ProcessingFileRowColumns holds the columns for the "processing_file_row" table.
	ProcessingFileRowColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "file_id", Type: field.TypeInt64},
		{Name: "row_index", Type: field.TypeInt32},
		{Name: "row_data_raw", Type: field.TypeString},
		{Name: "task_index", Type: field.TypeInt32},
		{Name: "task_mapping", Type: field.TypeString},
		{Name: "task_depends_on", Type: field.TypeString},
		{Name: "task_request_raw", Type: field.TypeString},
		{Name: "task_response_raw", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt16},
		{Name: "error_display", Type: field.TypeString},
	}
	// ProcessingFileRowTable holds the schema information for the "processing_file_row" table.
	ProcessingFileRowTable = &schema.Table{
		Name:       "processing_file_row",
		Columns:    ProcessingFileRowColumns,
		PrimaryKey: []*schema.Column{ProcessingFileRowColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "email", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "password_hash", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FileAwardPointTable,
		MemberTransactionTable,
		ProcessingFileTable,
		ProcessingFileRowTable,
		UsersTable,
	}
)

func init() {
	FileAwardPointTable.Annotation = &entsql.Annotation{
		Table: "file_award_point",
	}
	MemberTransactionTable.Annotation = &entsql.Annotation{
		Table: "member_transaction",
	}
	ProcessingFileTable.Annotation = &entsql.Annotation{
		Table: "processing_file",
	}
	ProcessingFileRowTable.Annotation = &entsql.Annotation{
		Table: "processing_file_row",
	}
}
