// Code generated by ent, DO NOT EDIT.

package configtask

import (
	"time"
)

const (
	// Label holds the string label denoting the configtask type in the database.
	Label = "config_task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldConfigMappingID holds the string denoting the config_mapping_id field in the database.
	FieldConfigMappingID = "config_mapping_id"
	// FieldTaskIndex holds the string denoting the task_index field in the database.
	FieldTaskIndex = "task_index"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEndPoint holds the string denoting the end_point field in the database.
	FieldEndPoint = "end_point"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldHeader holds the string denoting the header field in the database.
	FieldHeader = "header"
	// FieldPathParams holds the string denoting the path_params field in the database.
	FieldPathParams = "path_params"
	// FieldRequestParams holds the string denoting the request_params field in the database.
	FieldRequestParams = "request_params"
	// FieldRequestBody holds the string denoting the request_body field in the database.
	FieldRequestBody = "request_body"
	// FieldResponseSuccessHTTPStatus holds the string denoting the response_success_http_status field in the database.
	FieldResponseSuccessHTTPStatus = "response_success_http_status"
	// FieldResponseSuccessCodeSchema holds the string denoting the response_success_code_schema field in the database.
	FieldResponseSuccessCodeSchema = "response_success_code_schema"
	// FieldResponseMessageSchema holds the string denoting the response_message_schema field in the database.
	FieldResponseMessageSchema = "response_message_schema"
	// FieldMessageTransformations holds the string denoting the message_transformations field in the database.
	FieldMessageTransformations = "message_transformations"
	// FieldGroupByColumns holds the string denoting the group_by_columns field in the database.
	FieldGroupByColumns = "group_by_columns"
	// FieldGroupBySizeLimit holds the string denoting the group_by_size_limit field in the database.
	FieldGroupBySizeLimit = "group_by_size_limit"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the configtask in the database.
	Table = "config_task"
)

// Columns holds all SQL columns for configtask fields.
var Columns = []string{
	FieldID,
	FieldConfigMappingID,
	FieldTaskIndex,
	FieldName,
	FieldEndPoint,
	FieldMethod,
	FieldHeader,
	FieldPathParams,
	FieldRequestParams,
	FieldRequestBody,
	FieldResponseSuccessHTTPStatus,
	FieldResponseSuccessCodeSchema,
	FieldResponseMessageSchema,
	FieldMessageTransformations,
	FieldGroupByColumns,
	FieldGroupBySizeLimit,
	FieldCreatedAt,
	FieldCreatedBy,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ConfigMappingIDValidator is a validator for the "config_mapping_id" field. It is called by the builders before save.
	ConfigMappingIDValidator func(int32) error
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EndPointValidator is a validator for the "end_point" field. It is called by the builders before save.
	EndPointValidator func(string) error
	// MethodValidator is a validator for the "method" field. It is called by the builders before save.
	MethodValidator func(string) error
	// PathParamsValidator is a validator for the "path_params" field. It is called by the builders before save.
	PathParamsValidator func(string) error
	// RequestParamsValidator is a validator for the "request_params" field. It is called by the builders before save.
	RequestParamsValidator func(string) error
	// RequestBodyValidator is a validator for the "request_body" field. It is called by the builders before save.
	RequestBodyValidator func(string) error
	// DefaultGroupByColumns holds the default value on creation for the "group_by_columns" field.
	DefaultGroupByColumns string
	// DefaultGroupBySizeLimit holds the default value on creation for the "group_by_size_limit" field.
	DefaultGroupBySizeLimit int32
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
