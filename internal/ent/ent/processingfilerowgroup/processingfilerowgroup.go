// Code generated by ent, DO NOT EDIT.

package processingfilerowgroup

import (
	"time"
)

const (
	// Label holds the string label denoting the processingfilerowgroup type in the database.
	Label = "processing_file_row_group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFileID holds the string denoting the file_id field in the database.
	FieldFileID = "file_id"
	// FieldTaskIndex holds the string denoting the task_index field in the database.
	FieldTaskIndex = "task_index"
	// FieldGroupByValue holds the string denoting the group_by_value field in the database.
	FieldGroupByValue = "group_by_value"
	// FieldTotalRows holds the string denoting the total_rows field in the database.
	FieldTotalRows = "total_rows"
	// FieldRowIndexList holds the string denoting the row_index_list field in the database.
	FieldRowIndexList = "row_index_list"
	// FieldGroupRequestCurl holds the string denoting the group_request_curl field in the database.
	FieldGroupRequestCurl = "group_request_curl"
	// FieldGroupResponseRaw holds the string denoting the group_response_raw field in the database.
	FieldGroupResponseRaw = "group_response_raw"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldErrorDisplay holds the string denoting the error_display field in the database.
	FieldErrorDisplay = "error_display"
	// FieldExecutedTime holds the string denoting the executed_time field in the database.
	FieldExecutedTime = "executed_time"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the processingfilerowgroup in the database.
	Table = "processing_file_row_group"
)

// Columns holds all SQL columns for processingfilerowgroup fields.
var Columns = []string{
	FieldID,
	FieldFileID,
	FieldTaskIndex,
	FieldGroupByValue,
	FieldTotalRows,
	FieldRowIndexList,
	FieldGroupRequestCurl,
	FieldGroupResponseRaw,
	FieldStatus,
	FieldErrorDisplay,
	FieldExecutedTime,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
