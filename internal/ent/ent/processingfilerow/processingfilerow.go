// Code generated by ent, DO NOT EDIT.

package processingfilerow

import (
	"time"
)

const (
	// Label holds the string label denoting the processingfilerow type in the database.
	Label = "processing_file_row"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFileID holds the string denoting the file_id field in the database.
	FieldFileID = "file_id"
	// FieldRowIndex holds the string denoting the row_index field in the database.
	FieldRowIndex = "row_index"
	// FieldRowDataRaw holds the string denoting the row_data_raw field in the database.
	FieldRowDataRaw = "row_data_raw"
	// FieldTaskIndex holds the string denoting the task_index field in the database.
	FieldTaskIndex = "task_index"
	// FieldTaskMapping holds the string denoting the task_mapping field in the database.
	FieldTaskMapping = "task_mapping"
	// FieldTaskDependsOn holds the string denoting the task_depends_on field in the database.
	FieldTaskDependsOn = "task_depends_on"
	// FieldGroupByValue holds the string denoting the group_by_value field in the database.
	FieldGroupByValue = "group_by_value"
	// FieldTaskRequestCurl holds the string denoting the task_request_curl field in the database.
	FieldTaskRequestCurl = "task_request_curl"
	// FieldTaskRequestRaw holds the string denoting the task_request_raw field in the database.
	FieldTaskRequestRaw = "task_request_raw"
	// FieldTaskResponseRaw holds the string denoting the task_response_raw field in the database.
	FieldTaskResponseRaw = "task_response_raw"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldErrorDisplay holds the string denoting the error_display field in the database.
	FieldErrorDisplay = "error_display"
	// FieldExecutedTime holds the string denoting the executed_time field in the database.
	FieldExecutedTime = "executed_time"
	// FieldResultAsync holds the string denoting the result_async field in the database.
	FieldResultAsync = "result_async"
	// FieldStartAt holds the string denoting the start_at field in the database.
	FieldStartAt = "start_at"
	// FieldReceiveResponseAt holds the string denoting the receive_response_at field in the database.
	FieldReceiveResponseAt = "receive_response_at"
	// FieldReceiveResultAsyncAt holds the string denoting the receive_result_async_at field in the database.
	FieldReceiveResultAsyncAt = "receive_result_async_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the processingfilerow in the database.
	Table = "processing_file_row"
)

// Columns holds all SQL columns for processingfilerow fields.
var Columns = []string{
	FieldID,
	FieldFileID,
	FieldRowIndex,
	FieldRowDataRaw,
	FieldTaskIndex,
	FieldTaskMapping,
	FieldTaskDependsOn,
	FieldGroupByValue,
	FieldTaskRequestCurl,
	FieldTaskRequestRaw,
	FieldTaskResponseRaw,
	FieldStatus,
	FieldErrorDisplay,
	FieldExecutedTime,
	FieldResultAsync,
	FieldStartAt,
	FieldReceiveResponseAt,
	FieldReceiveResultAsyncAt,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultGroupByValue holds the default value on creation for the "group_by_value" field.
	DefaultGroupByValue string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
