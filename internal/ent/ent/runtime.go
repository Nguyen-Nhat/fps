// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/configmapping"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/configtask"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/fpsclient"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/processingfile"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/processingfilerow"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/processingfilerowgroup"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/ent/user"
	"git.teko.vn/loyalty-system/loyalty-file-processing/internal/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	configmappingFields := schema.ConfigMapping{}.Fields()
	_ = configmappingFields
	// configmappingDescClientID is the schema descriptor for client_id field.
	configmappingDescClientID := configmappingFields[0].Descriptor()
	// configmapping.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	configmapping.ClientIDValidator = configmappingDescClientID.Validators[0].(func(int32) error)
	// configmappingDescTotalTasks is the schema descriptor for total_tasks field.
	configmappingDescTotalTasks := configmappingFields[1].Descriptor()
	// configmapping.DefaultTotalTasks holds the default value on creation for the total_tasks field.
	configmapping.DefaultTotalTasks = configmappingDescTotalTasks.Default.(int32)
	// configmappingDescDataStartAtRow is the schema descriptor for data_start_at_row field.
	configmappingDescDataStartAtRow := configmappingFields[2].Descriptor()
	// configmapping.DefaultDataStartAtRow holds the default value on creation for the data_start_at_row field.
	configmapping.DefaultDataStartAtRow = configmappingDescDataStartAtRow.Default.(int32)
	// configmapping.DataStartAtRowValidator is a validator for the "data_start_at_row" field. It is called by the builders before save.
	configmapping.DataStartAtRowValidator = func() func(int32) error {
		validators := configmappingDescDataStartAtRow.Validators
		fns := [...]func(int32) error{
			validators[0].(func(int32) error),
			validators[1].(func(int32) error),
		}
		return func(data_start_at_row int32) error {
			for _, fn := range fns {
				if err := fn(data_start_at_row); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// configmappingDescResultFileConfig is the schema descriptor for result_file_config field.
	configmappingDescResultFileConfig := configmappingFields[6].Descriptor()
	// configmapping.ResultFileConfigValidator is a validator for the "result_file_config" field. It is called by the builders before save.
	configmapping.ResultFileConfigValidator = configmappingDescResultFileConfig.Validators[0].(func(string) error)
	// configmappingDescTimeout is the schema descriptor for timeout field.
	configmappingDescTimeout := configmappingFields[7].Descriptor()
	// configmapping.DefaultTimeout holds the default value on creation for the timeout field.
	configmapping.DefaultTimeout = configmappingDescTimeout.Default.(int32)
	// configmappingDescInputFileType is the schema descriptor for input_file_type field.
	configmappingDescInputFileType := configmappingFields[8].Descriptor()
	// configmapping.DefaultInputFileType holds the default value on creation for the input_file_type field.
	configmapping.DefaultInputFileType = configmappingDescInputFileType.Default.(string)
	// configmappingDescCreatedAt is the schema descriptor for created_at field.
	configmappingDescCreatedAt := configmappingFields[10].Descriptor()
	// configmapping.DefaultCreatedAt holds the default value on creation for the created_at field.
	configmapping.DefaultCreatedAt = configmappingDescCreatedAt.Default.(func() time.Time)
	// configmappingDescCreatedBy is the schema descriptor for created_by field.
	configmappingDescCreatedBy := configmappingFields[11].Descriptor()
	// configmapping.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	configmapping.CreatedByValidator = configmappingDescCreatedBy.Validators[0].(func(string) error)
	// configmappingDescUpdatedAt is the schema descriptor for updated_at field.
	configmappingDescUpdatedAt := configmappingFields[12].Descriptor()
	// configmapping.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	configmapping.DefaultUpdatedAt = configmappingDescUpdatedAt.Default.(func() time.Time)
	// configmapping.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	configmapping.UpdateDefaultUpdatedAt = configmappingDescUpdatedAt.UpdateDefault.(func() time.Time)
	configtaskFields := schema.ConfigTask{}.Fields()
	_ = configtaskFields
	// configtaskDescConfigMappingID is the schema descriptor for config_mapping_id field.
	configtaskDescConfigMappingID := configtaskFields[0].Descriptor()
	// configtask.ConfigMappingIDValidator is a validator for the "config_mapping_id" field. It is called by the builders before save.
	configtask.ConfigMappingIDValidator = configtaskDescConfigMappingID.Validators[0].(func(int32) error)
	// configtaskDescName is the schema descriptor for name field.
	configtaskDescName := configtaskFields[2].Descriptor()
	// configtask.DefaultName holds the default value on creation for the name field.
	configtask.DefaultName = configtaskDescName.Default.(string)
	// configtask.NameValidator is a validator for the "name" field. It is called by the builders before save.
	configtask.NameValidator = configtaskDescName.Validators[0].(func(string) error)
	// configtaskDescEndPoint is the schema descriptor for end_point field.
	configtaskDescEndPoint := configtaskFields[3].Descriptor()
	// configtask.EndPointValidator is a validator for the "end_point" field. It is called by the builders before save.
	configtask.EndPointValidator = configtaskDescEndPoint.Validators[0].(func(string) error)
	// configtaskDescMethod is the schema descriptor for method field.
	configtaskDescMethod := configtaskFields[4].Descriptor()
	// configtask.MethodValidator is a validator for the "method" field. It is called by the builders before save.
	configtask.MethodValidator = configtaskDescMethod.Validators[0].(func(string) error)
	// configtaskDescPathParams is the schema descriptor for path_params field.
	configtaskDescPathParams := configtaskFields[6].Descriptor()
	// configtask.PathParamsValidator is a validator for the "path_params" field. It is called by the builders before save.
	configtask.PathParamsValidator = configtaskDescPathParams.Validators[0].(func(string) error)
	// configtaskDescRequestParams is the schema descriptor for request_params field.
	configtaskDescRequestParams := configtaskFields[7].Descriptor()
	// configtask.RequestParamsValidator is a validator for the "request_params" field. It is called by the builders before save.
	configtask.RequestParamsValidator = configtaskDescRequestParams.Validators[0].(func(string) error)
	// configtaskDescRequestBody is the schema descriptor for request_body field.
	configtaskDescRequestBody := configtaskFields[8].Descriptor()
	// configtask.RequestBodyValidator is a validator for the "request_body" field. It is called by the builders before save.
	configtask.RequestBodyValidator = configtaskDescRequestBody.Validators[0].(func(string) error)
	// configtaskDescGroupByColumns is the schema descriptor for group_by_columns field.
	configtaskDescGroupByColumns := configtaskFields[13].Descriptor()
	// configtask.DefaultGroupByColumns holds the default value on creation for the group_by_columns field.
	configtask.DefaultGroupByColumns = configtaskDescGroupByColumns.Default.(string)
	// configtaskDescGroupBySizeLimit is the schema descriptor for group_by_size_limit field.
	configtaskDescGroupBySizeLimit := configtaskFields[14].Descriptor()
	// configtask.DefaultGroupBySizeLimit holds the default value on creation for the group_by_size_limit field.
	configtask.DefaultGroupBySizeLimit = configtaskDescGroupBySizeLimit.Default.(int32)
	// configtaskDescIsAsync is the schema descriptor for is_async field.
	configtaskDescIsAsync := configtaskFields[15].Descriptor()
	// configtask.DefaultIsAsync holds the default value on creation for the is_async field.
	configtask.DefaultIsAsync = configtaskDescIsAsync.Default.(bool)
	// configtaskDescCreatedAt is the schema descriptor for created_at field.
	configtaskDescCreatedAt := configtaskFields[16].Descriptor()
	// configtask.DefaultCreatedAt holds the default value on creation for the created_at field.
	configtask.DefaultCreatedAt = configtaskDescCreatedAt.Default.(func() time.Time)
	// configtaskDescCreatedBy is the schema descriptor for created_by field.
	configtaskDescCreatedBy := configtaskFields[17].Descriptor()
	// configtask.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	configtask.CreatedByValidator = configtaskDescCreatedBy.Validators[0].(func(string) error)
	// configtaskDescUpdatedAt is the schema descriptor for updated_at field.
	configtaskDescUpdatedAt := configtaskFields[18].Descriptor()
	// configtask.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	configtask.DefaultUpdatedAt = configtaskDescUpdatedAt.Default.(func() time.Time)
	// configtask.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	configtask.UpdateDefaultUpdatedAt = configtaskDescUpdatedAt.UpdateDefault.(func() time.Time)
	fpsclientFields := schema.FpsClient{}.Fields()
	_ = fpsclientFields
	// fpsclientDescName is the schema descriptor for name field.
	fpsclientDescName := fpsclientFields[1].Descriptor()
	// fpsclient.NameValidator is a validator for the "name" field. It is called by the builders before save.
	fpsclient.NameValidator = fpsclientDescName.Validators[0].(func(string) error)
	// fpsclientDescDescription is the schema descriptor for description field.
	fpsclientDescDescription := fpsclientFields[2].Descriptor()
	// fpsclient.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	fpsclient.DescriptionValidator = fpsclientDescDescription.Validators[0].(func(string) error)
	// fpsclientDescSampleFileURL is the schema descriptor for sample_file_url field.
	fpsclientDescSampleFileURL := fpsclientFields[3].Descriptor()
	// fpsclient.DefaultSampleFileURL holds the default value on creation for the sample_file_url field.
	fpsclient.DefaultSampleFileURL = fpsclientDescSampleFileURL.Default.(string)
	// fpsclientDescCreatedAt is the schema descriptor for created_at field.
	fpsclientDescCreatedAt := fpsclientFields[4].Descriptor()
	// fpsclient.DefaultCreatedAt holds the default value on creation for the created_at field.
	fpsclient.DefaultCreatedAt = fpsclientDescCreatedAt.Default.(func() time.Time)
	// fpsclientDescCreatedBy is the schema descriptor for created_by field.
	fpsclientDescCreatedBy := fpsclientFields[5].Descriptor()
	// fpsclient.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	fpsclient.CreatedByValidator = fpsclientDescCreatedBy.Validators[0].(func(string) error)
	// fpsclientDescUpdatedAt is the schema descriptor for updated_at field.
	fpsclientDescUpdatedAt := fpsclientFields[6].Descriptor()
	// fpsclient.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	fpsclient.DefaultUpdatedAt = fpsclientDescUpdatedAt.Default.(func() time.Time)
	// fpsclient.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	fpsclient.UpdateDefaultUpdatedAt = fpsclientDescUpdatedAt.UpdateDefault.(func() time.Time)
	processingfileFields := schema.ProcessingFile{}.Fields()
	_ = processingfileFields
	// processingfileDescDisplayName is the schema descriptor for display_name field.
	processingfileDescDisplayName := processingfileFields[1].Descriptor()
	// processingfile.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	processingfile.DisplayNameValidator = processingfileDescDisplayName.Validators[0].(func(string) error)
	// processingfileDescFileURL is the schema descriptor for file_url field.
	processingfileDescFileURL := processingfileFields[3].Descriptor()
	// processingfile.FileURLValidator is a validator for the "file_url" field. It is called by the builders before save.
	processingfile.FileURLValidator = processingfileDescFileURL.Validators[0].(func(string) error)
	// processingfileDescTotalMapping is the schema descriptor for total_mapping field.
	processingfileDescTotalMapping := processingfileFields[8].Descriptor()
	// processingfile.DefaultTotalMapping holds the default value on creation for the total_mapping field.
	processingfile.DefaultTotalMapping = processingfileDescTotalMapping.Default.(int32)
	// processingfileDescNeedGroupRow is the schema descriptor for need_group_row field.
	processingfileDescNeedGroupRow := processingfileFields[9].Descriptor()
	// processingfile.DefaultNeedGroupRow holds the default value on creation for the need_group_row field.
	processingfile.DefaultNeedGroupRow = processingfileDescNeedGroupRow.Default.(bool)
	// processingfileDescStatsTotalRow is the schema descriptor for stats_total_row field.
	processingfileDescStatsTotalRow := processingfileFields[10].Descriptor()
	// processingfile.DefaultStatsTotalRow holds the default value on creation for the stats_total_row field.
	processingfile.DefaultStatsTotalRow = processingfileDescStatsTotalRow.Default.(int32)
	// processingfileDescStatsTotalProcessed is the schema descriptor for stats_total_processed field.
	processingfileDescStatsTotalProcessed := processingfileFields[11].Descriptor()
	// processingfile.DefaultStatsTotalProcessed holds the default value on creation for the stats_total_processed field.
	processingfile.DefaultStatsTotalProcessed = processingfileDescStatsTotalProcessed.Default.(int32)
	// processingfileDescStatsTotalSuccess is the schema descriptor for stats_total_success field.
	processingfileDescStatsTotalSuccess := processingfileFields[12].Descriptor()
	// processingfile.DefaultStatsTotalSuccess holds the default value on creation for the stats_total_success field.
	processingfile.DefaultStatsTotalSuccess = processingfileDescStatsTotalSuccess.Default.(int32)
	// processingfileDescCreatedAt is the schema descriptor for created_at field.
	processingfileDescCreatedAt := processingfileFields[16].Descriptor()
	// processingfile.DefaultCreatedAt holds the default value on creation for the created_at field.
	processingfile.DefaultCreatedAt = processingfileDescCreatedAt.Default.(func() time.Time)
	// processingfileDescCreatedBy is the schema descriptor for created_by field.
	processingfileDescCreatedBy := processingfileFields[17].Descriptor()
	// processingfile.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	processingfile.CreatedByValidator = processingfileDescCreatedBy.Validators[0].(func(string) error)
	// processingfileDescUpdatedAt is the schema descriptor for updated_at field.
	processingfileDescUpdatedAt := processingfileFields[18].Descriptor()
	// processingfile.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	processingfile.DefaultUpdatedAt = processingfileDescUpdatedAt.Default.(func() time.Time)
	// processingfile.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	processingfile.UpdateDefaultUpdatedAt = processingfileDescUpdatedAt.UpdateDefault.(func() time.Time)
	processingfilerowFields := schema.ProcessingFileRow{}.Fields()
	_ = processingfilerowFields
	// processingfilerowDescGroupByValue is the schema descriptor for group_by_value field.
	processingfilerowDescGroupByValue := processingfilerowFields[6].Descriptor()
	// processingfilerow.DefaultGroupByValue holds the default value on creation for the group_by_value field.
	processingfilerow.DefaultGroupByValue = processingfilerowDescGroupByValue.Default.(string)
	// processingfilerowDescCreatedAt is the schema descriptor for created_at field.
	processingfilerowDescCreatedAt := processingfilerowFields[17].Descriptor()
	// processingfilerow.DefaultCreatedAt holds the default value on creation for the created_at field.
	processingfilerow.DefaultCreatedAt = processingfilerowDescCreatedAt.Default.(func() time.Time)
	// processingfilerowDescUpdatedAt is the schema descriptor for updated_at field.
	processingfilerowDescUpdatedAt := processingfilerowFields[18].Descriptor()
	// processingfilerow.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	processingfilerow.DefaultUpdatedAt = processingfilerowDescUpdatedAt.Default.(func() time.Time)
	// processingfilerow.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	processingfilerow.UpdateDefaultUpdatedAt = processingfilerowDescUpdatedAt.UpdateDefault.(func() time.Time)
	processingfilerowgroupFields := schema.ProcessingFileRowGroup{}.Fields()
	_ = processingfilerowgroupFields
	// processingfilerowgroupDescCreatedAt is the schema descriptor for created_at field.
	processingfilerowgroupDescCreatedAt := processingfilerowgroupFields[10].Descriptor()
	// processingfilerowgroup.DefaultCreatedAt holds the default value on creation for the created_at field.
	processingfilerowgroup.DefaultCreatedAt = processingfilerowgroupDescCreatedAt.Default.(func() time.Time)
	// processingfilerowgroupDescUpdatedAt is the schema descriptor for updated_at field.
	processingfilerowgroupDescUpdatedAt := processingfilerowgroupFields[11].Descriptor()
	// processingfilerowgroup.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	processingfilerowgroup.DefaultUpdatedAt = processingfilerowgroupDescUpdatedAt.Default.(func() time.Time)
	// processingfilerowgroup.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	processingfilerowgroup.UpdateDefaultUpdatedAt = processingfilerowgroupDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[1].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
}
