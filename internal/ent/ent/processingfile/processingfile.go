// Code generated by ent, DO NOT EDIT.

package processingfile

const (
	// Label holds the string label denoting the processingfile type in the database.
	Label = "processing_file"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldClientID holds the string denoting the client_id field in the database.
	FieldClientID = "client_id"
	// FieldDisplayName holds the string denoting the display_name field in the database.
	FieldDisplayName = "display_name"
	// FieldFileURL holds the string denoting the file_url field in the database.
	FieldFileURL = "file_url"
	// FieldResultFileURL holds the string denoting the result_file_url field in the database.
	FieldResultFileURL = "result_file_url"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldNumberTaskInFile holds the string denoting the number_task_in_file field in the database.
	FieldNumberTaskInFile = "number_task_in_file"
	// FieldStatsTotalRow holds the string denoting the stats_total_row field in the database.
	FieldStatsTotalRow = "stats_total_row"
	// FieldStatsTotalSuccess holds the string denoting the stats_total_success field in the database.
	FieldStatsTotalSuccess = "stats_total_success"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// Table holds the table name of the processingfile in the database.
	Table = "processing_file"
)

// Columns holds all SQL columns for processingfile fields.
var Columns = []string{
	FieldID,
	FieldClientID,
	FieldDisplayName,
	FieldFileURL,
	FieldResultFileURL,
	FieldStatus,
	FieldNumberTaskInFile,
	FieldStatsTotalRow,
	FieldStatsTotalSuccess,
	FieldCreatedBy,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
